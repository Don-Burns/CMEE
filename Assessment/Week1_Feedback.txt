Starting weekly assessment for Donal, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 2.19 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week1, Assessment, Week2, .git

Found the following files in parent directory: .gitignore, README.md

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
__pycache__

**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:
**********************************************************************
# My CMEE Course Repository
## **Description**
A depository for following the CMEE course at Imperial College London. 
The depositoryis meant as a mean of practicing various tools useful in computational ecology such as R, python and more.
As such the material found in [The Multilingual Quantitative Biologist](https://mhasoba.github.io/TheMulQuaBio/) is the material that will be followed to get a basic grasp of how to use these tools.

## **Structure**
The course is broken into weeks with each week covering different material.  This is reflected in the folder structure of this depository. Each week's folder will contain a data, results and code folder relating to that week's topics.

## **Table of Contents**
[**Week 1**](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1)
    Unix Terminal
    Shell Scripting (Bash)
    Latex Document creation

[**Week 2**](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week2)
    Python Week**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, SandBox, Results

Found the following files: README.md

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:
**********************************************************************
# Week 1 CMEE Course Repositoty
## **Description**
This week covered using the Unix Terminal, shell scripting using bash and how to use Latex to typeset and create a document.  All Code is written to be run from the [`Code`](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/Code) folder.

## Structure
Contains [`Code`](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/Code) with the code produced during this week's class', [`Data`](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/Data) with the data required for the code to run and [`Results`](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/Results) which is where the code will output the resulting file of code if any is produced. This week also contains [`SandBox`](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/SandBox) which is where simpler concepts are tested.

## **Table of Contents**
[**Code**](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/Code) - List of codes with brief descriptions.

```
boilerplate.sh
```
A simple boilerplate for shell scripts.  Prints "This is a shell script!".
```
ConcatonateTwoFiles.sh
```  
Takes two files a merges them. Target of code should be the files to be merged.
```
csvtospace.sh  
```
Takes a comma seperated files and outputs a space seperated file.
```
MyExampleScript.sh  
```
Greets the user twice and starts a new line.
```
tabtocsv.sh
```
Takes a tab seperated file and outputs a comma seperated file.
```
CompileLatex.sh  
```
Used to compile a pdf using a .tex input.  Call the input file without any file extension.  Any bibliography needs to be in .bib format and should be name the same as the input .tex file.
```
CountLines.sh           
```
Determines how many lines are in a file.
```
tiff2png.sh    
```
Takes a .tiff image and converts it to a .png.  
```
variables.sh
```
A script which takes an imput from the user to put in a string and separately takes two numbers adds them together.

[**Data**](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/Data)
Where inputs for the code are stored.

Directories:
    fasta           - contains genomic data used as an input for UnixPrac1.txt
    Temperatures    - contains .csv files to be used with csvtospace.sh

[**Results**](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/Results)
Where any outputs of the code to be placed.

[**SandBox**](https://github.com/Don-Burns/CMEECourseWork/tree/master/Week1/SandBox)
For any testing of code or files.**********************************************************************

Found following files in results directory: file_example_TIFF_1MB.png, _spaced.csv...
ideally, Results directory should be empty other than, perhaps, a readme. 

Found 12 code files: CompileLatex.sh, CountLines.sh, variables.sh, tiff2png.sh, ConcatonateTwoFiles.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, boilerplate.sh

Found the following extra files: README.md
0.5 pt deducted per extra file

Current Points = 99.5

======================================================================
Testing script/code files...

======================================================================
Inspecting script file CompileLatex.sh...

File contents are:
**********************************************************************
#!/bin/bash
pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex
mv $1.pdf ../Results ## move file to results folder in week 1
filename=$(basename $1)
echo ..Results/$filename
evince ../Results/$filename.pdf &   ## opens file from ../Results

## Cleanup
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
rm *.bbl
rm *.blg
rm *.fdb* ##produced a _latex file
rm *.fls
rm *.synctex.gz



echo "Done! Saved in: ../Results"


exit **********************************************************************

Testing CompileLatex.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error (or warning):
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
mv: cannot stat '.pdf': No such file or directory
basename: missing operand
Try 'basename --help' for more information.
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory
rm: cannot remove '*.bbl': No such file or directory
rm: cannot remove '*.blg': No such file or directory
rm: cannot remove '*.fdb*': No such file or directory
rm: cannot remove '*.fls': No such file or directory
rm: cannot remove '*.synctex.gz': No such file or directory

** (evince:9605): WARNING **: Error when getting information for file '/home/mhasoba/Documents/Teaching/IC_CMEE/2019-20/Coursework/StudentRepos/DonalBurns_DB319/Week1/Results/.pdf': No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

** (evince:9605): WARNING **: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Donal Burns db319@ic.ac.uk 
#Script CountLines.sh
# Desc: Determines how many lines are in a file.
# Arguments: none
# Date: Oct 2019

NumLines=`wc -l < $1`
echo "The File $1 has $NumLines lines"
echo


**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The File  has  lines


**********************************************************************

Encountered error (or warning):
CountLines.sh: line 8: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Donal Burns db319@ic.ac.uk 
# Script variables.sh
# Desc: a script which takes an input from the user to put in a string and separately takes two numbers adds them together.
# Arguments: none
# Date: Oct 2019



#Shows the use of variables

MyVar="some string"
echo "the current value of the variable is" $MyVar
echo "Please enter a new string"
read MyVar
echo " the current value of the varriable is"$MyVar

## Reading multiple values
echo " Enter two numbers separated by space(s)"
read a b 
echo "you entered" $a "and" $b ". Their sum is:"
mysum=`expr $a + $b`
echo $mysum






**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
Please enter a new string
 the current value of the varriable is
 Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error (or warning):
expr: syntax error

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Donal Burns db319@ic.ac.uk 
# Author: Donal Burns db319@ic.ac.uk 
# Script tiff2png.sh
# Desc: Takes a .tiff image and converts it to a .png
# Arguments: none
# Date: Oct 2019

for f in ../Data/*.tiff;
    do
        echo "$f"
        echo "Converting $f";
        convert "$f" "$(basename "$f" .tiff).png"; 
    done

mv *.png ../Results;**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
../Data/file_example_TIFF_1MB.tiff
Converting ../Data/file_example_TIFF_1MB.tiff

**********************************************************************

Code ran without errors

Time consumed = 0.24490s

======================================================================
Inspecting script file ConcatonateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Donal Burns db319@ic.ac.uk 
# Script ConcatonateTwoFiles.sh
# Desc: merges two files into one using concatonate function.
# Arguments: none
# Date: Oct 2019

cat $1 > $3
cat $2 >> $3

echo "Merged File is"

cat $3

mv $3 ../Results 

echo "Saved in ../Results."
**********************************************************************

Testing ConcatonateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is
Saved in ../Results.

**********************************************************************

Encountered error (or warning):
ConcatonateTwoFiles.sh: line 8: $3: ambiguous redirect
ConcatonateTwoFiles.sh: line 9: $3: ambiguous redirect
mv: missing destination file operand after '../Results'
Try 'mv --help' for more information.

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Donal Burns db319@ic.ac.uk 
# Script csvtospace.sh
# Desc: marges two files into one using concatonate function.
# Arguments: Name of Folder containing files to be coverted.
# Date: Oct 2019



echo "Creating a space separated version of $1"
cat $1 | tr -s "," " " >> "$1_spaced".csv

newfile=$"$1_spaced".csv
mv $newfile ../Results
echo "DONE!"

exit


**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a space separated version of 
DONE!

**********************************************************************

Code ran without errors

Time consumed = 0.00921s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
%%Desc: A first of typesetting a dcoument using latex.

\documentclass[12pt]{article}
\title{A Simple Document}
\author{Donal Burns}
\date{02/10/2019}
\begin{document}
  \maketitle

  \begin{abstract}
    This paper must be cool!
  \end{abstract}

  \section{Introduction}
    Blah Blah!

  \section{Materials \& Methods}
  One of teh most famous equations is:
  \begin{equation}
    E = mc^2
  \end{equation}
  This equation was first proposed by Einstein in 1905
  \cite{einstein1905does}.

  \bibliographystyle{plain}
  \bibliography{FirstBiblio}
\end{document}**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Donal Burns db319@ic.ac.uk 
#Script MyExampleScript.sh
# Desc: greets the user twice and starts a new line.
# Arguments: none
# Date: Oct 2019

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo








**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00319s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Annalen der Physik},
  volume={18},
  number={13},
  pages={639--41},
  year={1905}
}**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
#directory is the git dir in data
## Desc: a file to assess fasta sequence as found in Week1/Data of this repository

wc -l Data/fasta/407228326.fasta && wc -l Data/fasta/407228412.fasta && wc -l Data/fasta/E.coli.fasta  ## 1 - count numbe of lines 

tail -n +2 Data/fasta/E.coli.fasta ## 2 - omitts first line

tail -n +2 Data/fasta/E.coli.fasta | wc -m  ## 3 - count sequence length

tail -n +2 Data/fasta/E.coli.fasta | tr -d "\n" | grep -o "ATGC" |  wc -l  ## 4 -  count ATGC

AT=$(tail -n +2 Data/fasta/E.coli.fasta | tr -d "\n" | grep -o "A\|T" | wc -l ) && CG=$(tail -n +2 fasta/E.coli.fasta | tr -d "\n" | grep -o "C\|G" | wc -l) && echo "$AT/$CG" | bc -l    ## AT/GC ratio

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Donal Burns db319@ic.ac.uk 
# Script tabtocsv.sh
# Desc: substitute the tabs in the files with commas
# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file 
# Date: Oct 2019

echo " creating a comma delimited version of $1 ..."
cat $1 | tr -s "\t" "," >> $1.csv

echo "Done!  Output saved in $1"

exit**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
 creating a comma delimited version of  ...
Done!  Output saved in 

**********************************************************************

Code ran without errors

Time consumed = 0.00379s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Donal Burns db319@imperial.ac.uk
# Script; boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none 
# Date: Oct 2019


echo -e "\nThis is a shell script! \n" # -e enables echo to read the \n instead of as a string

#exit**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00468s

======================================================================
======================================================================
Finished running scripts

Ran into 4 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 99.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!